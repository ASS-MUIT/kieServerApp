#
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#common-application-properties
#
#Fichero de configuración para trabajar en modo desarrollo. 
#Si la aplicación se arranca como launch-dev se utilizará esta configuración de la aplicación
#En esta configuración el servidor embebido estará en modo "gestionado", se registrará en BC y desde ahí se podrán cargar contenedores, gestionar procesos y tareas humanas

#server configuration
server.address=0.0.0.0
server.port=8090

cxf.path=/rest

#GENERAL, trazado
logging.level.org.springframework.security=TRACE
logging.level.org.kie.server.services.rest.KieServerRestImpl=TRACE
logging.level.org.kie.server.common.rest.KieServerHttpRequest=TRACE
logging.level.org.jbpm.kie.services.impl.AbstractDeploymentService=TRACE
logging.level.org.jbpm.kie.services.impl.KModuleDeploymentService=TRACE
logging.level.org.kie.server.services.impl.KieServerImpl=TRACE
logging.level.org.kie.server.springboot.SpringBootKieServerImpl=TRACE
logging.level.org.jbpm.runtime.manager.impl.SingletonRuntimeManager=TRACE
logging.level.org.jbpm.springboot.services.SpringRegisterableItemsFactory=TRACE
#configuración consola h2
spring.h2.console.settings.trace=true
spring.h2.console.settings.web-allow-others=true

#propiedades del sistema para la configuracion del servidor
#utilizar el prefijo system.properties y a continuacion nombre de la propiedad y valor, si en el starter no estÃ¡ ya la propiedad disponible
#kie server config
kieserver.serverId=kieserverapp-dev
kieserver.serverName=kieserverapp Dev
kieserver.location=http://localhost:8090/rest/server
kieserver.user=kieserver
kieserver.pwd=kieserver1!
#kieserver.user=controllerUser
#kieserver.pwd=controllerUser


#BC config, configuración del controlador
#https://docs.redhat.com/en/documentation/red_hat_process_automation_manager/7.7/html/managing_and_monitoring_kie_server/kie-server-configure-server-managed-by-central-proc#kie-server-configure-server-managed-by-central-proc
#controllerUser tiene que estar configurado en BC con el rol rest-all
kieserver.controllers=http://localhost:8080/business-central/rest/controller
## el usuario controllerUser tiene que estar dado de alta en business central con el rol rest-all, porque debe permitir acceder a la api del controlador
system.properties.org.kie.server.controller.pwd=controllerUser
system.properties.org.kie.server.controller.user=controllerUser
#otras propiedades para la ejecución
#Permite realizar peticiones al motor de procesos en nombre de un usuario distinto al que se está conectando. Trabajo en modo agente.
system.properties.org.kie.server.bypass.auth.user=true




#kie server capabilities
kieserver.drools.enabled=true
kieserver.dmn.enabled=true
kieserver.jbpm.enabled=true
kieserver.jbpmui.enabled=true
kieserver.casemgmt.enabled=true
#kieserver.prometheus.enabled=true
#sigo probando lo de las tareas humanas

#system.properties.org.jbpm.ht.admin.user=medico
    
#grupo encargado de gestionar las tareas humanas
#permite ejecutar las tareas humanas del servidor kie desde el BC, imprescindible
system.properties.org.jbpm.ht.admin.group=admin
#system.properties.org.jbpm.task.cleanup.enabled=false


#jbpm configuration
jbpm.executor.enabled=false
#jbpm.executor.retries=5
#jbpm.executor.interval=3
#jbpm.executor.threadPoolSize=1
#jbpm.executor.timeUnit=SECONDS

#mÃ¡s info en https://www.baeldung.com/spring-boot-h2-database
#data source configuration
spring.datasource.username=sa
spring.datasource.password=sa
spring.datasource.url=jdbc:h2:./target/spring-boot-jbpm
#si lo quisieramos como fichero???
#spring.datasource.url=jdbc:h2:file:./target/spring-boot-jbpm   
spring.datasource.driver-class-name=org.h2.Driver
#para facilitar la monitorizaciÃ³n de la base de datos
#activa la url http://localhost:8090/h2-console que permitirÃ¡ ver la base de datos
spring.h2.console.enabled=true

#hibernate configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#transaction manager configuration
spring.jta.narayana.transaction-manager-id=1

#banner
spring.banner.location=classpath:banner.txt
